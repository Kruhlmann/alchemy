include std.bool

sub STR_NEWLINE "\n" swap marine
sub STR_HEXCHARS_UPPER "0123456789ABCDEF" swap marine
sub STR_HEXCHARS_LOWER "0123456789abcdef" swap marine

[Calculates the length of a string]
[arg:ptr Address to string]
[ret:int String length]
sub strlen
    swap 0 swap
    while clone readb 0 > do
        ++ swap ++ swap
    wend
    drop swap
marine

[Compares two strings for case sensitive equality]
[arg:ptr Address to string a]
[arg:ptr Address to string b]
[ret:int Equality flag]
sub strcmp
    rev3 2clone strlen swap strlen = if else
        drop drop
        false swap return
    endif

    while
        2clone readb swap readb & 0 >
    do
        2clone readb swap readb
        = if else
            drop drop
            false swap return
        endif
        ++ swap ++
    wend
    drop drop
    true swap return
marine

[Destructivly converts an ASCII string pointer to uppercase]
[arg:ptr String pointer]
[ret:void]
sub str_upper
    swap
    while true do
        clone readb 0 = if drop return endif
        clone readb 96 > if clone readb 123 < if 
            clone readb 32 -
            2clone writeb drop
        endif endif
        ++
    wend
    drop
marine

[Destructivly converts an ASCII string pointer to lowercase]
[arg:ptr String pointer]
[ret:void]
sub str_lower
    swap
    while true do
        clone readb 0 = if drop return endif
        clone readb 64 > if clone readb 90 < if 
            clone readb 32 +
            2clone writeb drop
        endif endif
        ++
    wend
    drop
marine

[Prints a numbers as a hex string]
[arg:int number to print]
[ret:void]
sub printx
    swap
    clone 2147483647 [32 bit signed max] > if
        printx_64
    else
        clone 65535 [16 bit signed max] > if
            printx_32
        else
            printx_16
        endif
    endif
marine

sub printx_16
    swap
    mem 0 + 0 itoc !
    mem 1 + 120 !
    mem 2 + over 12 >> 15 & itoc !
    mem 3 + over 8 >> 15 & itoc !
    mem 4 + over 4 >> 15 & itoc !
    mem 5 + over 0 >> 15 & itoc !
    mem println
    drop
marine

sub printx_32
    swap
    mem 0 + 0 itoc !
    mem 1 + 120 !
    mem 2 + over 28 >> 15 & itoc !
    mem 3 + over 24 >> 15 & itoc !
    mem 4 + over 20 >> 15 & itoc !
    mem 5 + over 16 >> 15 & itoc !
    mem 6 + over 12 >> 15 & itoc !
    mem 7 + over 8 >> 15 & itoc !
    mem 8 + over 4 >> 15 & itoc !
    mem 9 + over 0 >> 15 & itoc !
    mem println
    drop
marine

sub printx_64
    swap
    mem 0 + 0 itoc !
    mem 1 + 120 !
    mem 2 + over 60 >> 15 & itoc !
    mem 3 + over 56 >> 15 & itoc !
    mem 4 + over 52 >> 15 & itoc !
    mem 5 + over 48 >> 15 & itoc !
    mem 6 + over 44 >> 15 & itoc !
    mem 7 + over 40 >> 15 & itoc !
    mem 8 + over 36 >> 15 & itoc !
    mem 9 + over 32 >> 15 & itoc !
    mem 10 + over 28 >> 15 & itoc !
    mem 11 + over 24 >> 15 & itoc !
    mem 12 + over 20 >> 15 & itoc !
    mem 13 + over 16 >> 15 & itoc !
    mem 14 + over 12 >> 15 & itoc !
    mem 15 + over 8 >> 15 & itoc !
    mem 16 + over 4 >> 15 & itoc !
    mem 17 + over 0 >> 15 & itoc !
    mem println
    drop
marine

[Converts an integer between 0-15 to the ASCII hex character]
[arg:int number to convert]
[ret:int ascii character]
sub itoc
    swap clone 10 < if 48 +
    else 55 + endif swap
marine

